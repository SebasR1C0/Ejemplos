#pragma once
#include <iostream>
#include <conio.h>
#include <string>

using namespace std;

string nombreIngredientes[3] = { "Huevo", "Harina", "Vainilla" };
string unidadesMedidas[3] = { "Gramos", "Kilogramos","Mililitros" };

class CIngredientes {
private:
	string nombreI;
	string unidadMedida;
	int cantidad;
	double caloriasPorcion;

public:
	CIngredientes() {
		nombreI = nombreIngredientes[rand() % 3];
		unidadMedida = unidadesMedidas[rand() % 3];
		cantidad = rand() % 9 + 1;
		caloriasPorcion = rand() % 400 + 100;
	}
	~CIngredientes() {}

	int getCantidad() { return cantidad; }
	int getCaloriasPorcion() { return caloriasPorcion; }

	void datoIngredientes() {
		cout << "Nombre ingredientes: " << nombreI << endl;
		cout << "Unidad medida: " << unidadMedida << endl;
		cout << "Cantidad: " << cantidad << endl;
		cout << "Calorias por porcion: " << caloriasPorcion << endl;
	}
};
-------------------------------------------
#pragma once
#include "header.h"
#include <vector>

using namespace std;

string nombrePastel[2] = { "Selva negra", "Torta helada" };

class CPastel {
private:
	string nombreP;
	int cantidadPersonas;
	double precio;
	vector<CIngredientes*> ingredientes1;
	vector<CIngredientes*> ingredientes;

public:
	CPastel() {
		nombreP = nombrePastel[rand() % 2];
		cantidadPersonas = rand() % 12 + 3;
		precio = rand() % 40 + 20;
	}
	~CPastel() {}

	int getCantidadPersonas() { return cantidadPersonas; }

	void agregarIngrediente() {
		CIngredientes* objIngrediente = new CIngredientes();
		ingredientes.push_back(objIngrediente);
	}

	void datoPastel() {
		cout << "Nombre del pastel: " << nombreP << endl;
		cout << "Cantidad personas: " << cantidadPersonas << endl;
		cout << "Precio: " << precio << endl;
		for (int i = 0; i < ingredientes.size(); i++) {
			ingredientes[i]->datoIngredientes();
		}
	}

	int contarIngredientes() {
		return ingredientes.size();
	}

	double caloriasPastel() {
		for (int i = 0; i < ingredientes.size(); i++) {
			return ingredientes[i]->getCaloriasPorcion() * getCantidadPersonas();
		}
	}
	void invertir() {
		for (int i = ingredientes.size()-1; i >= 0; i--) {
			ingredientes1.push_back(ingredientes[i]);
			ingredientes.erase(ingredientes.begin()+i);
		}
		cout << "Nombre del pastel: " << nombreP << endl;
		cout << "Cantidad personas: " << cantidadPersonas << endl;
		cout << "Precio: " << precio << endl;
		for (int i = 0; i < ingredientes1.size(); i++) {
			ingredientes1[i]->datoIngredientes();
		}
	}
};
--------------
#include "header1.h"

using namespace std;

void menu() {
	cout << "1. Ingresar ingredientes pastel" << endl;
	cout << "2. Contar ingredientes" << endl;
	cout << "3. Calcular calorias" << endl;
	cout << "4. Listar pastel" << endl;
	cout << "5. Invertir el vector" << endl;
}

int main() {
	srand(time(NULL));

	int opciones=0;
	CPastel* objPastel = new CPastel();

	while (opciones != 5) {
		menu(); cout << "Ingrese la opcion: "; cin >> opciones;

		switch (opciones) {
		case 1:
			objPastel->agregarIngrediente();
			cout << "SE AGREGO" << endl;
			break;

		case 2:
			cout << "Cantidad de ingredientes es: " << objPastel->contarIngredientes() << endl;
			break;

		case 3:
			cout << "Cantidad de calorias es: " << objPastel->caloriasPastel() << endl;
			break;

		case 4:
			cout << "LISTA PASTEL" << endl;
			objPastel->datoPastel();
			break;
		case 5: objPastel->invertir();
			break;
		}
		_getch();
		system("cls");
	}

	_getch();
	return 0;
}
